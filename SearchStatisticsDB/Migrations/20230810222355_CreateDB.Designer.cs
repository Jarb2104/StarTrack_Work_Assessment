// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SearchStatisticsDB;

#nullable disable

namespace SearchStatisticsDB.Migrations
{
    [DbContext(typeof(SearchStatisticsContext))]
    [Migration("20230810222355_CreateDB")]
    partial class CreateDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("SearchStatisticsDB.Entities.QueryResult", b =>
                {
                    b.Property<int>("ResultID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnswerCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PicURL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("QueryDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("StackExchangeCallQueryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ResultID");

                    b.HasIndex("StackExchangeCallQueryID");

                    b.ToTable("QueryResults");
                });

            modelBuilder.Entity("SearchStatisticsDB.Entities.StackExchangeCall", b =>
                {
                    b.Property<int>("QueryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Page")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PageSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QueryText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("QueryID");

                    b.ToTable("StackExchangeCalls");
                });

            modelBuilder.Entity("SearchStatisticsDB.Entities.QueryResult", b =>
                {
                    b.HasOne("SearchStatisticsDB.Entities.StackExchangeCall", null)
                        .WithMany("Results")
                        .HasForeignKey("StackExchangeCallQueryID");
                });

            modelBuilder.Entity("SearchStatisticsDB.Entities.StackExchangeCall", b =>
                {
                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
